@using Mihcelle.Hwavmvid.Modal
@using Mihcelle.Hwavmvid.Data
@using Mihcelle.Hwavmvid.Shared.Constants
@using Microsoft.EntityFrameworkCore
@using System.Linq
@using System.Collections.Generic

@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using Mihcelle.Hwavmvid
@using Mihcelle.Hwavmvid.Components
@using Mihcelle.Hwavmvid.Providers

@inject Applicationdbcontext applicationdbcontext
@inject Modalservice modalservice
@inject IHttpClientFactory ihttpclientfactory
@inject Applicationprovider applicationprovider
@inject NavigationManager NavigationManager
@inject Applicationbackendprovider applicationbackendprovider


<AuthorizeView>
    <Authorized>

        @if (this.contextcomponenttype != null)
        {
            <Adminbase _adminmodalelementid="@adminmodalelementid" _componenttype="@contextcomponenttype"></Adminbase>
        }

        @if (this.applicationbackendprovider._contextframeworkpackages != null && this.applicationbackendprovider._contextframeworkpackages.Any())
        {
            <div>

                <h4 class="lead fw-bold bg-dark text-white text-center"><small>Application framework modules inside</small></h4>

                <div class="d-flex flex-wrap bg-white mt-4 position-relative" style="z-index: 1000">

                    @foreach (var package in this.applicationbackendprovider._contextframeworkpackages)
                    {

                        <div class="position-relative p-1" style="width: 150px; height: 150px;" id="@package.Id" draggable="true">
                            <button type="button" @onclick="async() => await Opencontextmodule(Type.GetType(package.Assemblytype))" class="btn btn-light w-100 h-100 px-2 py-4 bg-light text-dark text text-centerborder border-dark rounded-0">
                                <span class="display-4">@package.Icon.ToLower()</span><br />
                                <small class="py-2 w-100" style="font-size: 0.8rem; position:absolute; left:0px; bottom:10px;">@package.Name</small>
                            </button>
                        </div>

                    }

                </div>

            </div>
        }

    </Authorized>

</AuthorizeView>


@code {


    public string adminmodalelementid { get; set; } = "admin_modal_element_id";
    public Type? contextcomponenttype { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var items = await this.applicationdbcontext.Applicationmodulepackages.Where(item => item.Description.StartsWith(Applicationmoduletype.Applicationmoduleframework)).ToListAsync();
        var item = items.FirstOrDefault();
        this.contextcomponenttype = Type.GetType(item.Assemblytype);
        this.applicationbackendprovider._contextframeworkpackages = items;

        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            await this.modalservice.Initmodal();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    public async Task Opencontextmodule(Type componenttype)
    {
        
        this.contextcomponenttype = componenttype;
        await this.modalservice.ShowModal(this.adminmodalelementid);

        await InvokeAsync(() =>
        {
            this.StateHasChanged();
        });
    }
}

@rendermode InteractiveServer

@using Mihcelle.Hwavmvid.Data
@using Mihcelle.Hwavmvid.Shared.Models
@using Microsoft.AspNetCore.Identity
@using Mihcelle.Hwavmvid.Cookies

@inject NavigationManager navigationmanager
@inject IHttpClientFactory ihttpclientfactory
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Cookiesprovider cookiesprovider

<div class="login">

    <div class="input-group mb-3">
        <span class="input-group-text" id="login-username">@@</span>
        <input type="text" @bind-value="Applicationuser.UserName" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="login-username">
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text" id="login-password">@@</span>
        <input type="text" @bind-value="this.Applicationuser.PasswordHash" class="form-control" placeholder="Password" aria-label="Password" aria-describedby="login-password">
    </div>

    <button type="button" @onclick="async () => await this.Loginuser()" class="btn btn-sm btn-primary">Send data</button>

</div>


@code {

    protected Applicationuser Applicationuser { get; set; } = new Applicationuser();
    protected AuthenticationState authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.Applicationuser.EmailConfirmed = true;
        this.Applicationuser.TwoFactorEnabled = false;
        this.Applicationuser.LockoutEnabled = true;
    }

    protected async Task Loginuser()
    {

        try
        {
            var client = this.ihttpclientfactory.CreateClient();
            client.BaseAddress = new Uri(this.navigationmanager.BaseUri);
            await client.GetAsync("api/login/" + this.Applicationuser.UserName + "/" + this.Applicationuser.PasswordHash);

            this.navigationmanager.NavigateTo(navigationmanager.Uri, true);
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
        }
    }
}
